declare module 'react-native-push-notification' {
  import { FetchResult } from 'react-native'

  interface Registration {
    token: string
    os: string
  }

  interface Notification {
    foreground: boolean
    userInteraction: boolean
    message: string
    data: Object
    finish(result: FetchResult): void
  }

  interface LocalNotification {
    /* Android Only Properties */
    id?: string // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
    ticker?: string // (optional)
    autoCancel?: boolean // (optional) default: true
    largeIcon?: string // (optional) default: "ic_launcher"
    smallIcon?: string // (optional) default: "ic_notification" with fallback for "ic_launcher"
    bigText?: string // (optional) default: "message" prop
    subText?: string // (optional) default: none
    color?: string // (optional) default: system default
    vibrate?: boolean // (optional) default: true
    vibration?: number // vibration length in milliseconds, ignored if vibrate=false, default: 1000
    tag?: string // (optional) add tag to message
    group?: string // (optional) add group to message
    ongoing?: boolean // (optional) set whether this is an "ongoing" notification
    repeatType?: string // Repeating interval. Could be one of `week`, `day`, `hour`, `minute, `time`. If specified as time, it should be accompanied by one more parameter 'repeatTime` which should the number of milliseconds between each interval
    actions?: string  // (Android only) This is an array of strings where each string is a notificaiton action that will be presented with the notification. The array itself is specified in string format to circumvent some problems because of the way JSON arrays are handled by react-native android bridge.

    /* iOS only properties */
    alertAction?: string // (optional) default: view
    category?: string|null // (optional) default: null
    userInfo?: string|null // (optional) default: null (object containing additional notification data)

    /* iOS and Android properties */
    title?: string // (optional)
    message: string // (required)
    playSound?: boolean // (optional) default: true
    soundName?: string // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
    number?: string // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
  }

  interface Configuration {
    senderID?: string,
    permissions?: {
        alert: boolean
        badge: boolean
        sound: boolean
    }
    popInitialNotification?: boolean
    requestPermissions?: boolean
    onRegister?(registration: Registration): void
    onNotification(notification: Notification): void
  }

  export default class Notifications {
    static configure(config: Configuration): void
    static localNotification(notification: LocalNotification): void
  }
}
