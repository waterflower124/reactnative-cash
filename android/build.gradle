// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "28.0.2"
        minSdkVersion = 16
        compileSdkVersion = 28
        targetSdkVersion = 27
        supportLibVersion = "28.0.0"
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    configurations.all {
        // resolutionStrategy {
        //     force 'com.android.support:support-v4:+'
        // }
        resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'androidx.fragment' || details.requested.group == 'androidx.print' 
             || details.requested.group == 'androidx.core' || details.requested.group == 'androidx.localbroadcastmanager' 
             || details.requested.group == 'androidx.documentfile' || details.requested.group == 'androidx.loader' 
             || details.requested.group == 'androidx.legacy' 
             && !details.requested.name.contains('multidex') ) {
           details.useVersion "1.0.0-rc01"
        }

         if (details.requested.group == 'androidx.arch.core' || details.requested.group == 'androidx.lifecycle'
              && !details.requested.name.contains('multidex') ) {
           details.useVersion "2.0.0-rc01"
        }
     }
    }
    repositories {
        mavenLocal()
        google()
        jcenter()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
    }
}


subprojects {

     
 
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
                compileSdkVersion rootProject.ext.compileSdkVersion
                buildToolsVersion rootProject.ext.buildToolsVersion
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
    distributionUrl = distributionUrl.replace("bin", "all")
}
